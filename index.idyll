[meta title:"IS 445 Fall 2021" description:"Idyll exampleforIS445,Fall2021" /]

[Header
  fullWidth:true
  title:"IS 445 Example Page"
  subtitle:"Idyll for Data Viz"
  author:"Kangyang Wang"
  authorLink:"kw24@illinois.edu"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]


## Introduction

// Comments are javascript comments

## Quick review of Markdown

I can make lists:
* thing 1
* thing 2

I can make ordered lists:
1. stuff 1
1. stuff 2

// note: no spaces in lists!
 
Blocks of code are useful sometimes:

```
I am
a block
of code
```
## Images

![image of corg 1](https://i.redd.it/5f0snjdbzr121.jpg)

[img src:'https://i.redd.it/5f0snjdbzr121.jpg' style:`{height:'300px'}`/]

If you are familiar with the HTML language, you can use it with slight modifications.

[div className:"myDiv"]
[p]
A paragraph
[/p]
[/div]

// just note: replace the <> with []

Or you can (for the most part) just use Markdown!

## Layouts

We can use some of Idyll's layout elements, specifically [float](https://idyll-lang.org/docs/component/float) to place elements on one side or another.

[Float position:"left"]
  [img src: 'https://uiuc-ischool-dataviz.github.io/spring2019online/week04/data/littleCorgiInHat.png' style:`{height:'300px'}`/]
[/Float]

[Float position:"right"]
  [img src:'https://uiuc-ischool-dataviz.github.io/spring2019online/week10/corg/IMG_2809.jpg' style:`{height:'300px'}`/]
[/Float]

## Markup

Idyll is based on Markdown.

You can use familiar syntax
to create **bold** (`**bold**` ) and *italic* (``*italic*` ) styles,

* lists
* of
* items,

```
* lists
* of
* items,
```

1. and numbered
2. lists
3. of items,


```
1. and numbered
2. lists
3. of items,
```

in addition to [hyperlinks](https://idyll-lang.org) and images:

![quill](static/images/quill.svg)

```
![quill](static/images/quill.svg)
```

## Components

Components can be embedded using a bracket syntax:

```
[Range /]
```

and can contain nested content:

```
[Equation]e = mc^{2}[/Equation]
```

Components accept properties:

```
[Range value:x min:0 max:1 /]
```

that can be bound to variables to achieve interactivity (more in next section).


A variety of components are included by default. See [all the available components](https://idyll-lang.org/docs/components/). You can also use any html tag, for example: `[div] A div! [/div]`.

To create your own, add it to the `components/` folder. There are examples of how to use Idyll with React and D3 based components already included.



## Interactivity

Here is how you can instantiate a variable and bind it to a component:

[var name:"exampleVar" value:5 /]

[Range min:0 max:10 value:exampleVar /]
[Display value:exampleVar /]

```
[var name:"exampleVar" value:5 /]

[Range min:0 max:10 value:exampleVar /]
[Display value:exampleVar /]
```

## Learn More

To learn more see the documentation at [https://idyll-lang.org/docs/](https://idyll-lang.org/docs/),
join our [chatroom](https://gitter.im/idyll-lang/Lobby), or see the project on [GitHub](https://github.com/idyll-lang/idyll).

[hr /]

# Technical Details

## Installation

- Make sure you have `idyll` installed (`npm i -g idyll`).
- Clone this repo and run `npm install`.

## Developing a post locally

Run `idyll`.

## Building a post for production

Run `idyll build`. The output will appear in the top-level `build` folder. To change the output location, change the `output` option in `package.json`.

## Deploying

Make sure your post has been built, then deploy the docs folder via any static hosting service.

## Dependencies

You can install custom dependencies by running `npm install <package-name> --save`. Note that any collaborators will also need download the package locally by running `npm install` after pulling the changes.

## Added: test vega-lite

[data name:"lakeHuron" source:"LakeHuron.csv" /]

[IdyllVegaLite data:lakeHuron spec:`{
  mark: "line",
  encoding: {
    x: {
      field: "time",
      type: "temporal",
      axis: {title: "Year", format:"%Y"}
    },
    y: {
      field: "value",
      type: "quantitative",
      axis: {title: "Water level"},
      scale: { domain: [575, 582] }
    }
  }
}` /]
